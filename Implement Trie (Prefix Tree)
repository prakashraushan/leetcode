class Trie {

    /** Initialize your data structure here. */
    
    Node root;
    
    public class Node{
        HashMap<Character,Node> children =new HashMap();
        boolean isWord=false;
        
    }
    
    public Trie() {
        root = new Node();
    }
    
    /** Inserts a word into the trie. */
    public void insert(String word) {
        Node cur = root;
        
        for(char c:word.toCharArray()){
           
            if(cur.children.containsKey(c)){
                cur = cur.children.get(c);
            }else{
                cur.children.put(c,new Node()) ; 
                cur = cur.children.get(c);
                 
            }
        }
        cur.isWord =true;
    }
    
    /** Returns if the word is in the trie. */
    public boolean search(String word) {
         Node cur = root;
         for(char c:word.toCharArray()){
            if(!cur.children.containsKey(c)){
                 return false;

            }
             cur = cur.children.get(c);
         }
        if( cur.isWord){
            return true;
        }
        return false;
    }
    
    /** Returns if there is any word in the trie that starts with the given prefix. */
    public boolean startsWith(String prefix) {
         Node cur = root;
       
         for(char c:prefix.toCharArray()){
            if(!cur.children.containsKey(c)){
                 return false;
             
            }
             cur = cur.children.get(c);
         }
       
        return true;
    }
}

/**
 * Your Trie object will be instantiated and called as such:
 * Trie obj = new Trie();
 * obj.insert(word);
 * boolean param_2 = obj.search(word);
 * boolean param_3 = obj.startsWith(prefix);
 */

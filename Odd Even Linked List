/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode oddEvenList(ListNode head) {
        
        if(head == null || head.next == null){
            return head;
        }
        ListNode oddHeadNode = head;
        ListNode evenHeadNode = head.next;
        
        ListNode oddNode = oddHeadNode;
        ListNode evenNode = evenHeadNode;
        
       
        
        while(evenNode!=null){
            
          if(evenNode.next!=null){
              oddNode.next = evenNode.next;
          }else{
            
              oddNode.next = evenHeadNode;
              return oddHeadNode;
          }
            
            oddNode = oddNode.next;
            evenNode.next = oddNode.next;
            evenNode = evenNode.next;
            
            
            
            
            
        }
        oddNode.next =evenHeadNode;
        
        return oddHeadNode;
        
    }
}
// 1->2->3->4->5->6->7->8->9->10->NULL
// 1->3->2->4->5->6->7->8->9->10->NULL
// 1->3->5->7->9->2->4->6->8->10->NULL
